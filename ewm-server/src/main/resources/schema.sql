DROP TABLE IF EXISTS users, categories, compilations, events, requests,
compilations_events, locations CASCADE;

CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(254) NOT NULL UNIQUE,
    user_name VARCHAR(250) NOT NULL
    );

CREATE TABLE IF NOT EXISTS categories (
    category_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events (
    event_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(2000) NOT NULL,
    category INTEGER REFERENCES categories(category_id),
    confirmed_requests INTEGER,
    created_on timestamp without time zone,
    description VARCHAR(7000) NOT NULL,
    event_date timestamp without time zone,
    initiator INTEGER REFERENCES users(user_id),
    loc_Lat REAL,
    loc_Lon REAL,
    paid BOOLEAN NOT NULL,
    participant_limit INTEGER,
    published_on timestamp without time zone,
    request_moderation boolean,
    state VARCHAR(50) NOT NULL,
    title VARCHAR(120) NOT NULL,
    views INTEGER
);

CREATE TABLE IF NOT EXISTS requests (
    requests_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created timestamp without time zone,
    event INTEGER REFERENCES events(event_id),
    requester INTEGER REFERENCES users(user_id),
    status VARCHAR(20) NOT NULL,
    UNIQUE(event, requester)
);

CREATE TABLE IF NOT EXISTS compilations (
    compilation_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    events_id INTEGER REFERENCES events(event_id),
    pinned BOOLEAN,
    title VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilation_event_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id INTEGER REFERENCES events(event_id),
    compilation_id INTEGER REFERENCES compilations(compilation_id)
    );

CREATE TABLE IF NOT EXISTS locations(
    location_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);
