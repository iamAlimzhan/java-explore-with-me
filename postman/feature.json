{
  "info": {
    "_postman_id": "a7d3130a-17b4-4d2c-a678-7e4953b5e3e0",
    "name": "Test Explore With Me - feature comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "29076199"
  },
  "item": [
    {
      "name": "Добавление комментариев",
      "item": [
        {
          "name": "Добавление нового комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 201 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"У комментария должны быть такие поля: id, eventId, name, text, dateOfPost\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('eventId');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('text');\r",
                  "pm.expect(target).to.have.property('dateOfPost');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Ответ должен быть похож на запрос\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.eventId).to.not.be.null;\r",
                  "    pm.expect(target.name).to.not.be.null;\r",
                  "    pm.expect(source.text).equal(target.text, 'Комментарий должен быть похож на текст запроса');\r",
                  "    pm.expect(target.dateOfPost).to.not.be.null;\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Событие прошло отлично!\"\r\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:eventId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":eventId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "1"
                },
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление нового комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 201 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"У комментария должны быть такие поля: id, eventId, name, text, dateOfPost\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('eventId');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('text');\r",
                  "pm.expect(target).to.have.property('dateOfPost');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Ответ должен быть похож на запрос\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.eventId).to.not.be.null;\r",
                  "    pm.expect(target.name).to.not.be.null;\r",
                  "    pm.expect(source.text).equal(target.text, 'Комментарий должен быть похож на текст запроса');\r",
                  "    pm.expect(target.dateOfPost).to.not.be.null;\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Событие класс! Мне все понравилось\"\r\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:eventId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":eventId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                },
                {
                  "key": "eventId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление нового комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 201 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"У комментария должны быть такие поля: id, eventId, name, text, dateOfPost\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('eventId');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('text');\r",
                  "pm.expect(target).to.have.property('dateOfPost');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Ответ должен быть похож на запрос\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.eventId).to.not.be.null;\r",
                  "    pm.expect(target.name).to.not.be.null;\r",
                  "    pm.expect(source.text).equal(target.text, 'Комментарий должен быть похож на текст запроса');\r",
                  "    pm.expect(target.dateOfPost).to.not.be.null;\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Супер, событие прошло замечательно!\"\r\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:eventId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":eventId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "3"
                },
                {
                  "key": "eventId",
                  "value": "3"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление нового комментария с текстом меньше 10 символов",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Огонь!\"\r\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:eventId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":eventId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "4"
                },
                {
                  "key": "eventId",
                  "value": "4"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление нового комментария состоящий из пробелов",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"     \"\r\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:eventId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":eventId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "4"
                },
                {
                  "key": "eventId",
                  "value": "4"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Обновление комментария",
      "item": [
        {
          "name": "Обновление комментария с id 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 200 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"У комментария должны быть такие поля: id, eventId, name, text, dateOfPost\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('eventId');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('text');\r",
                  "pm.expect(target).to.have.property('dateOfPost');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Ответ должен быть похож на запрос\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.eventId).to.not.be.null;\r",
                  "    pm.expect(target.name).to.not.be.null;\r",
                  "    pm.expect(source.text).equal(target.text, 'Комментарий должен быть похож на текст запроса');\r",
                  "     pm.expect(target.dateOfPost).to.not.be.null;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Событие прошло удачно!\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "1"
                },
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Обновление пользователем комментария написанным другим человеком",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 409 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(409);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Upd: Событие не удовлетворило ожидания\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "3"
                },
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Обновление пользователем не созданного комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 404 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Upd: Событие было крутым, но не для меня\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "55"
                },
                {
                  "key": "commentId",
                  "value": "52"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Обновление не созданного пользователем комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 404 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Upd: событие не понравилось\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "667"
                },
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Обновление коммeнтария с id 1 администратором",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 200 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"У комментария должны быть такие поля: id, eventId, name, text, dateOfPost\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('eventId');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('text');\r",
                  "pm.expect(target).to.have.property('dateOfPost');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Ответ должен быть похож на запрос\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.eventId).to.not.be.null;\r",
                  "    pm.expect(target.name).to.not.be.null;\r",
                  "    pm.expect(source.text).equal(target.text, 'Комментарий должен быть похож на текст запроса');\r",
                  "     pm.expect(target.dateOfPost).to.not.be.null;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"text\": \"Дополняю свой коммент\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Получение комментариев по пользователю",
      "item": [
        {
          "name": "Получение автором события комментарий",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 200 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"У комментария должны быть такие поля: id, eventId, name, text, dateOfPost\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('eventId');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('text');\r",
                  "pm.expect(target).to.have.property('dateOfPost');\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "1"
                },
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение не автором события комментарий",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 409 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(409);    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "88"
                },
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение комментария несуществующим юзером",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 404 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(404);    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "667"
                },
                {
                  "key": "commentId",
                  "value": "3"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение не существующего комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 404 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(404);    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                },
                {
                  "key": "commentId",
                  "value": "890"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение автором события комментарий",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 200 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(200);    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"У комментария должны быть такие поля: id, eventId, name, text, dateOfPost\", function () {\r",
                  "pm.expect(target.length).eql(1);\r",
                  "pm.expect(target[0]).to.have.property('id');\r",
                  "pm.expect(target[0]).to.have.property('text');\r",
                  "pm.expect(target[0]).to.have.property('dateOfPost');\r",
                  "pm.expect(target[0]).to.have.property('name');\r",
                  "pm.expect(target[0]).to.have.property('eventId');\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments?from=0&size=1&createStart=2022-03-06%2013%3A30%3A38&createEnd=2025-03-06%2013%3A30%3A38",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments"
              ],
              "query": [
                {
                  "key": "from",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "1"
                },
                {
                  "key": "createStart",
                  "value": "2022-03-06%2013%3A30%3A38"
                },
                {
                  "key": "createEnd",
                  "value": "2025-03-06%2013%3A30%3A38"
                }
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение автором события комментарий без параметров",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 200 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(200);    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"У комментария должны быть такие поля: id, eventId, name, text, dateOfPost\", function () {\r",
                  "pm.expect(target.length).eql(1);\r",
                  "pm.expect(target[0]).to.have.property('id');\r",
                  "pm.expect(target[0]).to.have.property('text');\r",
                  "pm.expect(target[0]).to.have.property('dateOfPost');\r",
                  "pm.expect(target[0]).to.have.property('name');\r",
                  "pm.expect(target[0]).to.have.property('eventId');\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments?from=&size=&createStart=&createEnd=",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments"
              ],
              "query": [
                {
                  "key": "from",
                  "value": ""
                },
                {
                  "key": "size",
                  "value": ""
                },
                {
                  "key": "createStart",
                  "value": ""
                },
                {
                  "key": "createEnd",
                  "value": ""
                }
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "3"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Удаление комментариев",
      "item": [
        {
          "name": "Удаление пользователем своего комментария по id 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 204\", function () {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "3"
                },
                {
                  "key": "commentId",
                  "value": "3"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удалени чужого комментария с id 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 409 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(409);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "40"
                },
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удаление не существующего комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 404 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "77"
                },
                {
                  "key": "commentId",
                  "value": "7"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удаление не написанным пользователем комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 404 и данные в json\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "1000"
                },
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удаление комментария с id 1 администратором",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен иметь код 204\", function () {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    }
  ]
}